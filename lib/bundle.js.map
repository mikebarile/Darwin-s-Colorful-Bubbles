{"version":3,"sources":["webpack:///webpack/bootstrap 00c2cff6bd329a91bd94","webpack:///./lib/bubbles.js","webpack:///./lib/game.js","webpack:///./lib/bubble.js","webpack:///./lib/moving_object.js","webpack:///./lib/game_view.js","webpack:///./lib/user_bubble.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACXD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,yBAAyB;AAC5C,0BAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAAyC,kBAAkB,EAAE;AAC7D;;AAEA;AACA,0CAAyC,oBAAoB,EAAE;AAC/D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACnHA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpCA;AACA;;AAEA;AACA,kBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AChEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAoB,+BAA+B,EAAE;AACrD,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC7CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 00c2cff6bd329a91bd94","const Game = require('./game.js');\nconst GameView = require('./game_view.js');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let canvas = document.getElementById('game-canvas');\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  const ctx = canvas.getContext(\"2d\");\n  let game = new Game();\n  let gv = new GameView(game, ctx);\n  gv.start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bubbles.js\n// module id = 0\n// module chunks = 0","const Bubble = require('./bubble.js');\nconst UserBubble = require('./user_bubble.js');\n\nclass Game {\n  constructor () {\n    this.bubbles = [];\n    this.userBubbles = [];\n    this.addUserBubble();\n    this.addBubbles();\n    this.draw = this.draw.bind(this);\n    this.moveObjects = this.moveObjects.bind(this);\n    this.checkCollisions = this.checkCollisions.bind(this);\n    this.step = this.step.bind(this);\n    this.collide = this.collide.bind(this);\n    this.allBubbles = this.allBubbles.bind(this);\n  }\n\n  allBubbles() {\n    let newArray = this.userBubbles.concat(this.bubbles);\n    return newArray;\n  }\n\n  addBubbles() {\n    for (var i = 0; i < Game.NUM_BUBBLES; i++) {\n      let bubble = new Bubble();\n      while(this.checkCollision(bubble)){\n        bubble = new Bubble();\n      }\n      this.bubbles.push(bubble);\n    }\n  }\n\n  addUserBubble() {\n    this.userBubbles.push(new UserBubble());\n  }\n\n  // Function to ensure bubbles are initialized separated from one another\n  checkCollision(bubble) {\n    let collided = false;\n    for (var i = 0; i < this.allBubbles().length; i++) {\n      if (this.allBubbles()[i].isCollidedWith(bubble)){\n        collided = true;\n      }\n    }\n    return collided;\n  }\n\n  checkCollisions() {\n    for (var i = 0; i < this.bubbles.length; i++) {\n      for (var j = i + 1; j < this.bubbles.length; j++) {\n        if (this.bubbles[i].isCollidedWith(this.bubbles[j])) {\n          this.collide(this.bubbles[i], this.bubbles[j]);\n        }\n      }\n    }\n  }\n\n  step(delta) {\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, Game.X_COORD, Game.Y_COORD);\n    this.allBubbles().forEach(bubble => { bubble.draw(ctx); });\n  }\n\n  moveObjects(delta) {\n    this.allBubbles().forEach(bubble => { bubble.move(delta); });\n  }\n\n  // Physics engine governing elastic collisions\n  collide(bub1, bub2) {\n    // Calculate mass for each bubble\n    let m1 = Math.PI * Math.pow((bub1.radius), 2);\n    let m2 = Math.PI * Math.pow((bub2.radius), 2);\n\n    // Calculate contact angle\n    let dx = bub1.pos[0] - bub2.pos[0];\n    let dy = bub1.pos[1] - bub2.pos[1];\n    let angle = Math.atan2(dy, dx);\n\n    // Calculate velocity magnitudes and directional vectors\n    let mag1 = Math.sqrt(Math.pow(bub1.vel[0], 2) + Math.pow(bub1.vel[1], 2));\n    let mag2 = Math.sqrt(Math.pow(bub2.vel[0], 2) + Math.pow(bub2.vel[1], 2));\n    let d1 = Math.atan2(bub1.vel[1], bub1.vel[0]);\n    let d2 = Math.atan2(bub2.vel[1], bub2.vel[0]);\n\n    // Calculate new speeds based on magnitude, direction and the collision angle\n    let newX1 = mag1*Math.cos(d1 - angle);\n    let newY1 = mag1*Math.sin(d1 - angle);\n    let newX2 = mag2*Math.cos(d2 - angle);\n    let newY2 = mag2*Math.sin(d2 - angle);\n\n    // Adjust final speeds\n    let finalX1 = ((m1 - m2)*newX1 + (m2+m2)*newX2) / (m1+m2);\n    let finalX2 = ((m1 + m1)*newX1 + (m2 - m1)*newX2) / (m1+m2);\n    let finalY1 = newY1;\n    let finalY2 = newY2;\n\n    let x1 = Math.cos(angle)*finalX1 + Math.cos(angle + Math.PI/2)*finalY1;\n    let y1 = Math.sin(angle)*finalX1 + Math.sin(angle + Math.PI/2)*finalY1;\n    let x2 = Math.cos(angle)*finalX2 + Math.cos(angle + Math.PI/2)*finalY2;\n    let y2 = Math.sin(angle)*finalX2 + Math.sin(angle + Math.PI/2)*finalY2;\n\n    bub1.bounce(x1, y1);\n    bub2.bounce(x2, y2);\n  }\n\n}\n\nGame.X_COORD = window.innerWidth;\nGame.Y_COORD = window.innerHeight;\nGame.NUM_BUBBLES = 15;\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","const MovingObject = require('./moving_object');\n\nconst RADIUS = 40;\nconst SPEED = 3;\n\nconst scale = (vec, m) => {\n  return [vec[0] * m, vec[1] * m];\n};\n\nconst randomVec = (length) => {\n  const deg = 2 * Math.PI * Math.random();\n  return scale([Math.sin(deg), Math.cos(deg)], length);\n};\n\nconst randomPos = (radius) => {\n  let xPos = Math.floor(Math.random() * (window.innerWidth - 2*radius - 1)) + radius + 1;\n  let yPos = Math.floor(Math.random() * (window.innerHeight - 2*radius - 1)) + radius + 1;\n  return [xPos, yPos];\n};\n\nclass Bubble extends MovingObject {\n  constructor (pos) {\n    let opts = {};\n    let speed = Math.floor(Math.random() * SPEED) + 1;\n    opts.radius = Math.floor(Math.random() * RADIUS) + 5;\n    opts.vel = randomVec(speed);\n    opts.pos = randomPos(opts.radius);\n    super(opts);\n  }\n\n  bounce (x, y) {\n    this.pos = [this.pos[0] + x, this.pos[1] + y];\n    this.vel = [x, y];\n  }\n}\n\nmodule.exports = Bubble;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bubble.js\n// module id = 2\n// module chunks = 0","function randomColor() {\n  const hexDigits = \"0123456789ABCDEF\";\n\n  let color = \"#\";\n  for (let i = 0; i < 3; i ++) {\n    color += hexDigits[Math.floor((Math.random() * 16))];\n  }\n\n  return color;\n}\n\nclass MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.radius = options.radius;\n    this.color = randomColor();\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true);\n    ctx.fill();\n  }\n\n  isCollidedWith(otherObject) {\n    let distance = Math.sqrt(Math.pow((this.pos[0] - otherObject.pos[0]), 2) +\n      Math.pow((this.pos[1] - otherObject.pos[1]), 2));\n    return (distance < this.radius + otherObject.radius);\n  }\n\n  move(delta) {\n\n    delta = delta || 1;\n\n    if (this.pos[0] - this.radius <= 0) {\n      this.pos[0] = 0 + this.radius;\n      this.vel[0] = this.vel[0] * -1;\n    }\n    else if (this.pos[0] + this.radius >= window.innerWidth) {\n      this.pos[0] = window.innerWidth - this.radius;\n      this.vel[0] = this.vel[0] * -1;\n    }\n\n\n    if (this.pos[1] - this.radius <= 0) {\n      this.pos[1] = 0 + this.radius;\n      this.vel[1] = this.vel[1] * -1;\n    }\n    else if (this.pos[1] + this.radius >= window.innerHeight) {\n      this.pos[1] = window.innerHeight - this.radius;\n      this.vel[1] = this.vel[1] * -1;\n    }\n\n    this.pos = [\n      this.pos[0] + delta/20 * this.vel[0],\n      this.pos[1] + delta/20 * this.vel[1]\n    ];\n  }\n\n}\n\nmodule.exports = MovingObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_object.js\n// module id = 3\n// module chunks = 0","const Game = require('./game.js');\n\nconst MOVES = {\n  \"w\": [ 0, -1],\n  \"a\": [-1,  0],\n  \"s\": [ 0,  1],\n  \"d\": [ 1,  0],\n};\n\nclass GameView {\n  constructor(game, ctx) {\n    this.game = game;\n    this.ctx = ctx;\n    this.start = this.start.bind(this);\n    this.userBubble = this.game.userBubbles[0];\n    this.lastTime = 0;\n  }\n\n  animate(curTime) {\n    let delta = curTime - this.lastTime;\n\n    this.game.draw(this.ctx);\n    this.game.step(delta);\n    this.lastTime = curTime;\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  bindKeyHandlers() {\n    const ship = this.userBubble;\n\n    Object.keys(MOVES).forEach((k) => {\n      let input = MOVES[k];\n      key(k, () => { this.userBubble.propel(input); });\n    });\n\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n}\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 4\n// module chunks = 0","const MovingObject = require('./moving_object');\n\nclass UserBubble extends MovingObject {\n  constructor (pos) {\n    let opts = {};\n    opts.radius = 10;\n    opts.vel = [0, 0];\n    opts.pos = [window.innerWidth/2, window.innerHeight/2];\n    super(opts);\n  }\n\n  propel(input) {\n    this.vel[0] += input[0];\n    this.vel[1] += input[1];\n  }\n}\n\nmodule.exports = UserBubble;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/user_bubble.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}